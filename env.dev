# Meta
OWNER_ORGANIZATION_NAME=INF

# PostgreSQL
DATABASE_URL=postgres://postgresuser:mysecretpass@postgres:5432/postgres

# For docker
POSTGRES_USER=postgresuser
POSTGRES_PASSWORD=mysecretpass

# General settings
DJANGO_ADMIN_URL=^admin/
DJANGO_SETTINGS_MODULE=config.settings.local
DJANGO_SECRET_KEY=l_0n4zPFn-)3hLS|}Z,s_*te(KN@XL}Os:<V[r*2qrA-2rKeXI
DJANGO_ALLOWED_HOSTS=*
DJANGO_SECURE_SSL_REDIRECT=False

# Cache / channels / celery
CACHE_REDIS_LOCATION=redis://redis:6379/0
CHANNELS_REDIS_LOCATION=redis://redis:6379/1
CELERY_BROKER_URL=redis://redis:6379/2
CELERY_BROKER_BACKEND=redis://redis:6379/3

# AWS Settings
DJANGO_AWS_ACCESS_KEY_ID=
DJANGO_AWS_SECRET_ACCESS_KEY=
DJANGO_AWS_STORAGE_BUCKET_NAME=

# Used with email
DJANGO_MAILGUN_API_KEY=
DJANGO_SERVER_EMAIL=
MAILGUN_SENDER_DOMAIN=

# Security! Better to use DNS for this task, but you can use redirect
DJANGO_SECURE_SSL_REDIRECT=False

# django-allauth
DJANGO_ACCOUNT_ALLOW_REGISTRATION=True

# Sentry
DJANGO_SENTRY_DSN=

# Stripe
STRIPE_LIVE_PUBLIC_KEY=pk_live_
STRIPE_LIVE_SECRET_KEY=sk_live_
STRIPE_TEST_PUBLIC_KEY=pk_test_
STRIPE_TEST_SECRET_KEY=sk_test_
STRIPE_LIVE_MODE=False

# AWS
TOPIC_CREATED_ARN=
AWS_DEFAULT_REGION=

# Web Client
CLIENT_DOMAIN=inf.li
